#!/bin/bash
##############################################################################
#
# Copyright (C) Zenoss, Inc. 2013, all rights reserved.
#
# This content is made available according to terms specified in
# License.zenoss under the directory where your Zenoss product is installed.
#
##############################################################################

if [ -z ${ZPROXY_HOME} ]; then
    SCRIPT=`readlink -f $0`
    pushd `dirname ${SCRIPT}` > /dev/null
    SCRIPTPATH=`pwd -P`
    popd > /dev/null
    ZPROXY_HOME=`dirname ${SCRIPTPATH}`
fi

rotate_logs() {
  while true; do
    if [ -s ${ZPROXY_HOME}/logs/access.log ]; then
      if [ $(du -m ${ZPROXY_HOME}/logs/access.log | cut -f 1) -ge 30 ]; then
        mv ${ZPROXY_HOME}/logs/access.log ${ZPROXY_HOME}/logs/access.log.0
        kill -USR1 $(cat ${ZPROXY_HOME}/logs/nginx.pid)
      fi
    fi
    sleep 3600
  done
}

reload_nginx() {
	LD_LIBRARY_PATH=${ZPROXY_HOME}/lib ${ZPROXY_HOME}/sbin/nginx -s reload
}

update_zopes() {
	while true; do
		${ZPROXY_HOME}/scripts/update_upstreams 9080 ${ZPROXY_HOME}/conf/zope-upstreams.conf
		if [ $? -eq 2 ]; then
			echo "$(date) Reloading nginx config due to upstream Zope servers change"
			reload_nginx
		fi
		${ZPROXY_HOME}/scripts/update_upstreams 9290 ${ZPROXY_HOME}/conf/zopereports-upstreams.conf
		if [ $? -eq 2 ]; then
			echo "$(date) Reloading nginx config due to upstream Reporting-Zope servers change"
			reload_nginx
		fi
		${ZPROXY_HOME}/scripts/update_upstreams 9320 ${ZPROXY_HOME}/conf/apizopes-upstreams.conf
		if [ $? -eq 2 ]; then
			echo "$(date) Reloading nginx config due to upstream API-Zope servers change"
			reload_nginx
		fi
		sleep 5
	done
}

update_zope_static() {
	CONFDIR=${ZPROXY_HOME}/conf
	CONF=${CONFDIR}/zope-static.conf
	TMPCONF=${CONFDIR}/.zope-static.conf.tmp
	while true; do
		wget -qO ${TMPCONF} http://127.0.0.1:9080/nginx_static;
		if [ $? -eq 0 ]; then
			if ! cmp -s ${TMPCONF} ${CONF}; then
				mv ${TMPCONF} ${CONF}
				echo "Reloading nginx config due to Zope static resources change"
				reload_nginx
			fi
			return
		fi
		sleep 5
	done
}

zproxy_run() {
    case "$CMD" in
      start)
	    export LD_LIBRARY_PATH=${ZPROXY_HOME}/lib:$LD_LIBRARY_PATH
	    echo "Starting zproxy"
	    cd ${ZPROXY_HOME}
		rotate_logs &
		update_zopes &
		update_zope_static &
	    exec ${ZPROXY_HOME}/sbin/nginx $@
	    ;;
      register)
	    ZPROXY_HOME=${ZPROXY_HOME} python ${ZPROXY_HOME}/scripts/register.py $@
	    ;;
	*)
	    cat - <<HELP
Usage: $(basename $0) {start|load-scripts|register|register-all}

  where the commands are:
    start        - start zproxy
    register     - Top level command for interacting with registering endpoints
HELP
	    exit 1
    esac
    exit $?
}

CMD=$1
shift
zproxy_run "$@"
